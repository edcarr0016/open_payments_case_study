<?php namespace App\Supplemental\Traits;

use Illuminate\Database\QueryException;

trait CaseStudy
{

    public function fill(array $attributes)
    {
        $attrs = [];
        $intersect = array_intersect_key($attributes, $this->propertyMap);

        foreach($intersect as $key => $value){
            $attrs[$this->propertyMap[$key]] = $value;
        }

        return parent::fill($attrs); // TODO: Change the autogenerated stub
    }

    public static function create(array $attributes = array()){
        $model = new static();

        $model->fill($attributes);
        try{
            $model->save();
        }catch(QueryException $e){
            if(str_contains($e->getMessage(), 'Duplicate entry')){
                if(array_key_exists('id',$model->getAttributes())){
                    return $model->find($model->id);
                }else if(array_key_exists('given_id',$model->getAttributes())){
                    return $model->whereGivenId($model->given_id)->get()->first();
                }else{
                    return $model->whereAddressLine1($model->address_line1)->whereZipCode($model->zip_code)->get()->first();
                }
            }else{
                throw $e;
            }
        }

        return $model;
    }

    public function setUpdatedAtAttribute($updated){} // No updated_at column in table.

    public function records(){
        return $this->belongsToMany('App\Payments');
    }
}